}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
#par(mfrow = c(1, 1))
}
change_pos <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_meanvar(n1, n2, 1.5, 1.5, -1, 5, "Change in mean", omitx = TRUE)
# change in variance
change_meanvar(n1, n2, 1.5, 5, 0, 0, "Change in variance", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_meanvar(n1, n2, 3, 1, 4, 0, "Change in mean and variance", omit_title = TRUE)
par(mfrow = c(1,1))
}
# Change at different positions
#***************************
change_pos(120, 120)
change_meanvar <- function(n1, n2, sd1, sd2, mean1, mean2, title, omitx=FALSE, omit_title=FALSE) {
#par(mfrow = c(1, 2))
change <- c(rnorm(n=n1, mean=mean1, sd=sd1), rnorm(n=n2, mean=mean2, sd=sd2))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_lines(n1, n2, sd1, sd2, mean1, mean2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else if (omitx && omit_title){
plot(proc,  xlab = "", main = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
#par(mfrow = c(1, 1))
}
change_meanvar <- function(n1, n2, sd1, sd2, mean1, mean2, title, omitx=FALSE, omit_title=FALSE) {
change <- c(rnorm(n=n1, mean=mean1, sd=sd1), rnorm(n=n2, mean=mean2, sd=sd2))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_lines(n1, n2, sd1, sd2, mean1, mean2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else if (omitx && omit_title){
plot(proc,  xlab = "", main = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_meanvar(n1, n2, 1.5, 1.5, -1, 5, "Change in mean", omitx = TRUE)
# change in variance
change_meanvar(n1, n2, 1.5, 5, 0, 0, "Change in variance", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_meanvar(n1, n2, 3, 1, 4, 0, "Change in mean and variance", omit_title = TRUE)
par(mfrow = c(1,1))
}
# Change at different positions
#***************************
change_pos(120, 120)
change_meanvar <- function(n1, n2, sd1, sd2, mean1, mean2, title, omitx=FALSE, omit_title=FALSE) {
change <- c(rnorm(n=n1, mean=mean1, sd=sd1), rnorm(n=n2, mean=mean2, sd=sd2))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_lines(n1, n2, sd1, sd2, mean1, mean2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else if (omitx & omit_title){
plot(proc, main = "" ,xlab = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_meanvar(n1, n2, 1.5, 1.5, -1, 5, "Change in mean", omitx = TRUE)
# change in variance
change_meanvar(n1, n2, 1.5, 5, 0, 0, "Change in variance", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_meanvar(n1, n2, 3, 1, 4, 0, "Change in mean and variance", omit_title = TRUE)
par(mfrow = c(1,1))
}
# Change at different positions
#***************************
change_pos(120, 120)
change_meanvar <- function(n1, n2, sd1, sd2, mean1, mean2, title, omitx=FALSE, omit_title=FALSE) {
change <- c(rnorm(n=n1, mean=mean1, sd=sd1), rnorm(n=n2, mean=mean2, sd=sd2))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_lines(n1, n2, sd1, sd2, mean1, mean2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if (omitx & omit_title){
plot(proc, main = "" ,xlab = "")
} else if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_meanvar(n1, n2, 1.5, 1.5, -1, 5, "Change in mean", omitx = TRUE)
# change in variance
change_meanvar(n1, n2, 1.5, 5, 0, 0, "Change in variance", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_meanvar(n1, n2, 3, 1, 4, 0, "Change in mean and variance", omit_title = TRUE)
par(mfrow = c(1,1))
}
# Change at different positions
#***************************
change_pos(120, 120)
change_pos(20, 220)
change_pos(220, 20) # not detected
change_pos(60, 180)
change_pos(180, 60)
plot_slopes <- function(n1, n2, i1, i2, slope1, slope2){
segments(x0 = 0, y0 = i1, x1 = n1, y1 = n1*slope1+i1, col = "black")
segments(x0 = 0, y0 = i1 + 50, x1 = n1, y1 = n1*slope1+i1+50, col = "black", lty="dotted")
segments(x0 = 0, y0 = i1 - 50, x1 = n1, y1 = n1*slope1+i1-50, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2, x1 = n1+n2, y1 = (n2+n1)*slope2+i2, col = "black")
segments(x0 = n1+1, y0 = i2+50, x1 = n1+n2, y1 = (n2+n1)*slope2+i2+50, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2-50, x1 = n1+n2, y1 = (n2+n1)*slope2+i2-50, col = "black", lty="dotted")
}
change_intertrend <- function(n1, n2, i1, i2, slope1, slope2, title, omitx=FALSE, omit_title=FALSE){
change <- c((slope1*c(1:n1) + i1 + rnorm(n=n1, mean=0, sd=50)), (slope2*c(1:n2) + i2 + rnorm(n=n2, mean=0, sd=50)))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_slopes(n1, n2, i1, i2, slope1, slope2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if (omitx & omit_title){
plot(proc, main = "" ,xlab = "")
} else if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos_meanvar <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_meanvar(n1, n2, 1.5, 1.5, -1, 5, "Change in mean", omitx = TRUE)
# change in variance
change_meanvar(n1, n2, 1.5, 5, 0, 0, "Change in variance", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_meanvar(n1, n2, 3, 1, 4, 0, "Change in mean and variance", omit_title = TRUE)
par(mfrow = c(1,1))
}
change_pos_intertrend <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_intertrend(n1, n2, 50, 10, 5, 5, "Change in intercept", omitx = TRUE)
# change in variance
change_intertrend(n1, n2, 5, 5, -2, 4, "Change in trend", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_intertrend(n1, n2, 30, 1, 4, 2, "Change in intercept and trend", omit_title = TRUE)
par(mfrow = c(1,1))
}
# generate plots for different type of breakpoints like in Beaulieu et al.
library(strucchange)
set.seed(1234)
plot_lines <- function(n1, n2, sd1, sd2, mean1, mean2){
segments(x0 = 0, y0 = mean1, x1 = n1, y1 = mean1, col = "black")
segments(x0 = 0, y0 = mean1 + sd1, x1 = n1, y1 = mean1 + sd1, col = "black", lty="dotted")
segments(x0 = 0, y0 = mean1 - sd1, x1 = n1, y1 = mean1 - sd1, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = mean2, x1 = n1+n2, y1 = mean2, col = "black")
segments(x0 = n1+1, y0 = mean2+sd2, x1 = n1+n2, y1 = mean2+sd2, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = mean2-sd2, x1 = n1+n2, y1 = mean2-sd2, col = "black", lty="dotted")
}
change_meanvar <- function(n1, n2, sd1, sd2, mean1, mean2, title, omitx=FALSE, omit_title=FALSE) {
change <- c(rnorm(n=n1, mean=mean1, sd=sd1), rnorm(n=n2, mean=mean2, sd=sd2))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_lines(n1, n2, sd1, sd2, mean1, mean2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if (omitx & omit_title){
plot(proc, main = "" ,xlab = "")
} else if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos_meanvar <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_meanvar(n1, n2, 1.5, 1.5, -1, 5, "Change in mean", omitx = TRUE)
# change in variance
change_meanvar(n1, n2, 1.5, 5, 0, 0, "Change in variance", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_meanvar(n1, n2, 3, 1, 4, 0, "Change in mean and variance", omit_title = TRUE)
par(mfrow = c(1,1))
}
plot_slopes <- function(n1, n2, i1, i2, slope1, slope2){
segments(x0 = 0, y0 = i1, x1 = n1, y1 = n1*slope1+i1, col = "black")
segments(x0 = 0, y0 = i1 + 50, x1 = n1, y1 = n1*slope1+i1+50, col = "black", lty="dotted")
segments(x0 = 0, y0 = i1 - 50, x1 = n1, y1 = n1*slope1+i1-50, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2, x1 = n1+n2, y1 = (n2+n1)*slope2+i2, col = "black")
segments(x0 = n1+1, y0 = i2+50, x1 = n1+n2, y1 = (n2+n1)*slope2+i2+50, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2-50, x1 = n1+n2, y1 = (n2+n1)*slope2+i2-50, col = "black", lty="dotted")
}
change_intertrend <- function(n1, n2, i1, i2, slope1, slope2, title, omitx=FALSE, omit_title=FALSE){
change <- c((slope1*c(1:n1) + i1 + rnorm(n=n1, mean=0, sd=50)), (slope2*c(1:n2) + i2 + rnorm(n=n2, mean=0, sd=50)))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_slopes(n1, n2, i1, i2, slope1, slope2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if (omitx & omit_title){
plot(proc, main = "" ,xlab = "")
} else if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos_intertrend <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_intertrend(n1, n2, 50, 10, 5, 5, "Change in intercept", omitx = TRUE)
# change in variance
change_intertrend(n1, n2, 5, 5, -2, 4, "Change in trend", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_intertrend(n1, n2, 30, 1, 4, 2, "Change in intercept and trend", omit_title = TRUE)
par(mfrow = c(1,1))
}
change_pos_intertrend(120, 120)
plot_slopes <- function(n1, n2, i1, i2, slope1, slope2){
segments(x0 = 0, y0 = i1, x1 = n1, y1 = n1*slope1+i1, col = "black")
segments(x0 = 0, y0 = i1 + 50, x1 = n1, y1 = n1*slope1+i1+50, col = "black", lty="dotted")
segments(x0 = 0, y0 = i1 - 50, x1 = n1, y1 = n1*slope1+i1-50, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2, x1 = n1+n2, y1 = (n2+n1)*slope2, col = "black")
segments(x0 = n1+1, y0 = i2+50, x1 = n1+n2, y1 = (n2+n1)*slope2+50, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2-50, x1 = n1+n2, y1 = (n2+n1)*slope2-50, col = "black", lty="dotted")
}
change_intertrend <- function(n1, n2, i1, i2, slope1, slope2, title, omitx=FALSE, omit_title=FALSE){
change <- c((slope1*c(1:n1) + i1 + rnorm(n=n1, mean=0, sd=50)), (slope2*c(1:n2) + i2 + rnorm(n=n2, mean=0, sd=50)))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_slopes(n1, n2, i1, i2, slope1, slope2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if (omitx & omit_title){
plot(proc, main = "" ,xlab = "")
} else if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos_intertrend <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_intertrend(n1, n2, 50, 10, 5, 5, "Change in intercept", omitx = TRUE)
# change in variance
change_intertrend(n1, n2, 5, 5, -2, 4, "Change in trend", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_intertrend(n1, n2, 30, 1, 4, 2, "Change in intercept and trend", omit_title = TRUE)
par(mfrow = c(1,1))
}
change_pos_intertrend(120, 120)
plot_slopes <- function(n1, n2, i1, i2, slope1, slope2){
segments(x0 = 0, y0 = i1, x1 = n1, y1 = n1*slope1+i1, col = "black")
segments(x0 = 0, y0 = i1 + 50, x1 = n1, y1 = n1*slope1+i1+50, col = "black", lty="dotted")
segments(x0 = 0, y0 = i1 - 50, x1 = n1, y1 = n1*slope1+i1-50, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2, x1 = n1+n2, y1 = (n2)*slope2, col = "black")
segments(x0 = n1+1, y0 = i2+50, x1 = n1+n2, y1 = (n2)*slope2+50, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2-50, x1 = n1+n2, y1 = (n2)*slope2-50, col = "black", lty="dotted")
}
change_intertrend <- function(n1, n2, i1, i2, slope1, slope2, title, omitx=FALSE, omit_title=FALSE){
change <- c((slope1*c(1:n1) + i1 + rnorm(n=n1, mean=0, sd=50)), (slope2*c(1:n2) + i2 + rnorm(n=n2, mean=0, sd=50)))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_slopes(n1, n2, i1, i2, slope1, slope2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if (omitx & omit_title){
plot(proc, main = "" ,xlab = "")
} else if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos_intertrend <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_intertrend(n1, n2, 50, 10, 5, 5, "Change in intercept", omitx = TRUE)
# change in variance
change_intertrend(n1, n2, 5, 5, -2, 4, "Change in trend", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_intertrend(n1, n2, 30, 1, 4, 2, "Change in intercept and trend", omit_title = TRUE)
par(mfrow = c(1,1))
}
change_pos_intertrend(120, 120)
change_pos_intertrend(20, 220)
change_pos_intertrend(220, 20) # harder to detect
change_pos_intertrend(60, 180)
change_pos_intertrend(220, 20) # harder to detect
change_pos_intertrend(60, 180)
change_pos_intertrend(180, 60)
plot_slopes <- function(n1, n2, i1, i2, slope1, slope2){
segments(x0 = 0, y0 = i1, x1 = n1, y1 = n1*slope1+i1, col = "black")
segments(x0 = 0, y0 = i1 + 50, x1 = n1, y1 = n1*slope1+i1+100, col = "black", lty="dotted")
segments(x0 = 0, y0 = i1 - 50, x1 = n1, y1 = n1*slope1+i1-100, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2, x1 = n1+n2, y1 = (n2)*slope2, col = "black")
segments(x0 = n1+1, y0 = i2+50, x1 = n1+n2, y1 = (n2)*slope2+100, col = "black", lty="dotted")
segments(x0 = n1+1, y0 = i2-50, x1 = n1+n2, y1 = (n2)*slope2-100, col = "black", lty="dotted")
}
change_intertrend <- function(n1, n2, i1, i2, slope1, slope2, title, omitx=FALSE, omit_title=FALSE){
change <- c((slope1*c(1:n1) + i1 + rnorm(n=n1, mean=0, sd=100)), (slope2*c(1:n2) + i2 + rnorm(n=n2, mean=0, sd=100)))
if(omitx){
plot(change, type ="l", xlab = "", ylab = "y", main = title)
} else {
plot(change, type ="l", xlab = "Time", ylab = "y", main = title)
}
plot_slopes(n1, n2, i1, i2, slope1, slope2)
d <- ts(change, frequency=1, start=c(0,1))
proc <- efp(d ~ 1, d, type = "Rec-CUSUM", rescale = TRUE)
if (omitx & omit_title){
plot(proc, main = "" ,xlab = "")
} else if(omitx){
plot(proc, xlab = "")
} else if (omit_title) {
plot(proc, main = "")
} else {
plot(proc)
}
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos_intertrend <- function(n1, n2){
par(mfrow = c(3, 2))
# change in mean
change_intertrend(n1, n2, 5, 10, 3, 3, "Change in intercept", omitx = TRUE)
# change in variance
change_intertrend(n1, n2, 5, 5, -2, 4, "Change in trend", omitx = TRUE, omit_title = TRUE)
# change in mean and variance
change_intertrend(n1, n2, 30, 1, 4, 2, "Change in intercept and trend", omit_title = TRUE)
par(mfrow = c(1,1))
}
change_pos_intertrend(120, 120)
change_pos_intertrend <- function(n1, n2){
par(mfrow = c(3, 2))
change_intertrend(n1, n2, 5, 10, 3, 3, "Change in intercept", omitx = TRUE)
change_intertrend(n1, n2, 5, 5, -1, 1, "Change in trend", omitx = TRUE, omit_title = TRUE)
change_intertrend(n1, n2, 30, 1, 4, 2, "Change in intercept and trend", omit_title = TRUE)
par(mfrow = c(1,1))
}
change_pos_intertrend(120, 120)
change_pos_intertrend <- function(n1, n2){
par(mfrow = c(3, 2))
change_intertrend(n1, n2, 5, 10, 3, 3, "Change in intercept", omitx = TRUE)
change_intertrend(n1, n2, 5, 5, -1, 1.5, "Change in trend", omitx = TRUE, omit_title = TRUE)
change_intertrend(n1, n2, 30, 1, 4, 2, "Change in intercept and trend", omit_title = TRUE)
par(mfrow = c(1,1))
}
change_pos_intertrend(120, 120)
autocorr <- function(n1, n2, c){
# no change point but strong autocorrelation
autocorr <- arima.sim(model = list(order = c(1, 0, 0), ar = c), n = n1+n2)
plot(autocorr, ylab = "y", main = "No change point, strong positive autocorrelation")
proc <- efp(autocorr ~ 1, autocorr, type = "Rec-CUSUM", rescale = TRUE)
plot(proc, main = "")
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
autocorr <- function(n1, n2, c){
# no change point but strong autocorrelation
autocorr <- arima.sim(model = list(order = c(1, 0, 0), ar = c), n = n1+n2)
plot(autocorr, ylab = "y", main = "No change point, strong positive autocorrelation")
proc <- efp(autocorr ~ 1, autocorr, type = "Rec-CUSUM", rescale = TRUE)
plot(proc, main = "")
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos_intertrend <- function(n1, n2, c){
par(mfrow = c(3, 2))
change_intertrend(n1, n2, 5, 10, 3, 3, "Change in intercept", omitx = TRUE)
change_intertrend(n1, n2, 5, 10, -1, 1.5, "Change in intercept and trend",omitx = TRUE, omit_title = TRUE)
autocorr(n1, n2, c)
par(mfrow = c(1,1))
}
autocorr <- function(n1, n2, c){
# no change point but strong autocorrelation
autocorr <- arima.sim(model = list(order = c(1, 0, 0), ar = c), n = n1+n2)
plot(autocorr, ylab = "y", main = paste0("No change point, autocorrelation: ", c))
proc <- efp(autocorr ~ 1, autocorr, type = "Rec-CUSUM", rescale = TRUE)
plot(proc, main = "")
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos_intertrend <- function(n1, n2, c){
par(mfrow = c(3, 2))
change_intertrend(n1, n2, 5, 10, 3, 3, "Change in intercept", omitx = TRUE)
change_intertrend(n1, n2, 5, 10, -1, 1.5, "Change in intercept and trend",omitx = TRUE, omit_title = TRUE)
autocorr(n1, n2, c)
par(mfrow = c(1,1))
}
change_pos_intertrend(120, 120, 0.4)
change_pos_intertrend(20, 220, 0.5)
autocorr <- function(n1, n2, c){
# no change point but strong autocorrelation
autocorr <- arima.sim(model = list(order = c(1, 0, 0), ar = c), n = n1+n2)
plot(autocorr, ylab = "y", main = paste0("No change point, autocorrelation: ", c))
abline(h=0)
proc <- efp(autocorr ~ 1, autocorr, type = "Rec-CUSUM", rescale = TRUE)
plot(proc, main = "")
res <- sctest(proc)
p <- round(res$p.value, 3)
text(30, max(c(0.9*max(proc$process), 2.5)), paste0("p-value = ",p), cex = 1)
}
change_pos_intertrend <- function(n1, n2, c){
par(mfrow = c(3, 2))
change_intertrend(n1, n2, 5, 10, 3, 3, "Change in intercept", omitx = TRUE)
change_intertrend(n1, n2, 5, 10, -1, 1.5, "Change in intercept and trend",omitx = TRUE, omit_title = TRUE)
autocorr(n1, n2, c)
par(mfrow = c(1,1))
}
change_pos_intertrend(120, 120, 0.4)
change_pos_intertrend(20, 220, 0.5)
change_pos_intertrend(220, 20, 0.6)
change_pos_intertrend(60, 180, 0.7)
change_pos_intertrend(180, 60, 0.8)
change_pos_intertrend(60, 180, 0.7)
change_pos_intertrend(180, 60, 0.8)
