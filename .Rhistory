wh_cluster_sel<- tmp$clusters$clusters %in% wh_cluster
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
out<- list()
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
View(out)
# using both stcs and maxT in stcs
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global/2, na.rm = TRUE)
stcs_maxT_thr<- quantile(perm_results$stcs_maxT, 1-alpha_global/2, na.rm = TRUE)
wh_cluster_stcs<- which(tmp$clusters$cluster.count > stcs_thr)
stcs_maxT<- vector(length=length(tmp$clusters$cluster.count))
for (i in 1:length(tmp$clusters$cluster.count)) stcs_maxT[i]<- max(abs(data[tmp$clusters$clusters==i]), na.rm = TRUE)
wh_cluster_stcs_maxT<- which(stcs_maxT > stcs_maxT_thr)
wh_cluster_sel<- tmp$clusters$clusters %in% c(wh_cluster_stcs, wh_cluster_stcs_maxT)
out$stcs_maxT<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster)  x %in% wh_cluster, wh_cluster=unique(c(wh_cluster_stcs, wh_cluster_stcs_maxT)))
View(out)
out$stcs_maxT<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster)  x %in% wh_cluster, wh_cluster=unique(c(wh_cluster_stcs, wh_cluster_stcs_maxT)))
View(out)
# combining function of stcs and stcs_maxT_all
wt_thr <- quantile(perm_results$wt, 1-alpha_global, na.rm = TRUE)
#tmp$clusters$w_stat <- perm_results$original_wt
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
wh_cluster_sel <- tmp$clusters$clusters %in% wh_cluster_wt
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
View(out)
View(out)
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster_wt) x %in% wh_cluster_wt, wh_cluster_wt)
View(out)
load_all()
perm_results_old <- perm_results
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 20
perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
View(perm_results)
View(perm_results)
perm_results$wt
perm_results$wt[!is.finite(perm_results$wt)] <- 0
perm_results$wt
out<- list()
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
wh_cluster<- which(tmp$clusters$cluster.count > stcs_thr)
stcs_maxT_thr<- quantile(perm_results$stcs_maxT, 1-alpha_global/2, na.rm = TRUE)
wh_cluster_stcs<- which(tmp$clusters$cluster.count > stcs_thr)
stcs_maxT<- vector(length=length(tmp$clusters$cluster.count))
for (i in 1:length(tmp$clusters$cluster.count)) stcs_maxT[i]<- max(abs(data[tmp$clusters$clusters==i]), na.rm = TRUE)
wh_cluster_stcs_maxT<- which(stcs_maxT > stcs_maxT_thr)
wh_cluster_sel<- tmp$clusters$clusters %in% c(wh_cluster_stcs, wh_cluster_stcs_maxT)
out$stcs_maxT<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster)  x %in% wh_cluster, wh_cluster=unique(c(wh_cluster_stcs, wh_cluster_stcs_maxT)))
# combining function of stcs and stcs_maxT_all
wt_thr <- quantile(perm_results$wt, 1-alpha_global, na.rm = TRUE)
#tmp$clusters$w_stat <- perm_results$original_wt
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
wh_cluster_sel <- tmp$clusters$clusters %in% wh_cluster_wt
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster_wt) x %in% wh_cluster_wt, wh_cluster_wt)
View(out)
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
# using both stcs and maxT in stcs
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global/2, na.rm = TRUE)
stcs_maxT_thr<- quantile(perm_results$stcs_maxT, 1-alpha_global/2, na.rm = TRUE)
wh_cluster_stcs<- which(tmp$clusters$cluster.count > stcs_thr)
stcs_maxT<- vector(length=length(tmp$clusters$cluster.count))
for (i in 1:length(tmp$clusters$cluster.count)) stcs_maxT[i]<- max(abs(data[tmp$clusters$clusters==i]), na.rm = TRUE)
wh_cluster_stcs_maxT<- which(stcs_maxT > stcs_maxT_thr)
wh_cluster_sel<- tmp$clusters$clusters %in% c(wh_cluster_stcs, wh_cluster_stcs_maxT)
out$stcs_maxT<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster)  x %in% wh_cluster, wh_cluster=unique(c(wh_cluster_stcs, wh_cluster_stcs_maxT)))
# combining function of stcs and stcs_maxT_all
wt_thr <- quantile(perm_results$wt, 1-alpha_global, na.rm = TRUE)
#tmp$clusters$w_stat <- perm_results$original_wt
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
#wh_cluster_sel <- tmp$clusters$clusters %in% wh_cluster_wt
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster_wt) x %in% wh_cluster_wt, wh_cluster_wt)
View(out)
load_all()
perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
perm_results$wt
out<- list()
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
wh_cluster<- which(tmp$clusters$cluster.count > stcs_thr)
wh_cluster_sel<- tmp$clusters$clusters %in% wh_cluster
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
# using both stcs and maxT in stcs
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global/2, na.rm = TRUE)
stcs_maxT_thr<- quantile(perm_results$stcs_maxT, 1-alpha_global/2, na.rm = TRUE)
wh_cluster_stcs<- which(tmp$clusters$cluster.count > stcs_thr)
stcs_maxT<- vector(length=length(tmp$clusters$cluster.count))
for (i in 1:length(tmp$clusters$cluster.count)) stcs_maxT[i]<- max(abs(data[tmp$clusters$clusters==i]), na.rm = TRUE)
wh_cluster_stcs_maxT<- which(stcs_maxT > stcs_maxT_thr)
wh_cluster_sel<- tmp$clusters$clusters %in% c(wh_cluster_stcs, wh_cluster_stcs_maxT)
out$stcs_maxT<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster)  x %in% wh_cluster, wh_cluster=unique(c(wh_cluster_stcs, wh_cluster_stcs_maxT)))
# combining function of stcs and stcs_maxT_all
wt_thr <- quantile(perm_results$wt, 1-alpha_global, na.rm = TRUE)
#tmp$clusters$w_stat <- perm_results$original_wt
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
#wh_cluster_sel <- tmp$clusters$clusters %in% wh_cluster_wt
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster_wt) x %in% wh_cluster_wt, wh_cluster_wt)
View(out)
# SCRIPT FOR TESTING FUNCTIONS
library("devtools")
load_all()
# ADDITIONAL NEEDED LIBRARIES
library(tidyverse) # for pipe: %>%
library(fields) # for nicer basic plotting: image.plot
# GENERAL SETTINGS
str(temp_gistemp)
data=temp_gistemp
fx=sample_mk_function
method="all"
nperm=10
alpha_local=0.05
alpha_global=0.05
null_distribution="normal" # defines if threshold based on alpha level is drawn from normal or t distribution
seed=NULL
block_size=NULL
verbose=TRUE
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 20
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
out<- list()
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
wh_cluster<- which(tmp$clusters$cluster.count > stcs_thr)
wh_cluster_sel<- tmp$clusters$clusters %in% wh_cluster
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
# combining function of stcs and stcs_maxT_all
wt_thr <- quantile(perm_results$wt, 1-alpha_global, na.rm = TRUE)
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster_wt) x %in% wh_cluster_wt, wh_cluster_wt)
View(out)
View(out)
View(out)
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 50
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
wh_cluster_wt <- sum(perm_results$original_wt > wt_thr)
wh_cluster
View(perm_results)
load_all()
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 10
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
out<- list()
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
wh_cluster<- which(tmp$clusters$cluster.count > stcs_thr)
wh_cluster_sel<- tmp$clusters$clusters %in% wh_cluster
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster_wt) x %in% wh_cluster_wt, wh_cluster_wt)
View(out)
perm_results
wt_thr
stcs_thr
load_all()
load_all()
data=temp_gistemp
View(perm_results)
perm_results$wt
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 30
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
library(clustermq)
install.packages('clustermq')
out<- list()
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
wh_cluster<- which(tmp$clusters$cluster.count > stcs_thr)
#wh_cluster_sel<- tmp$clusters$clusters %in% wh_cluster
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
# combining function of stcs and stcs_maxT_all
wt_thr <- quantile(perm_results$wt, 1-alpha_global, na.rm = TRUE)
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
perm_results$original_wt
wt_thr
tmp$clusters$cluster.count
View(perm_results)
View(tmp)
load_all()
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 10
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
View(perm_results)
perm_results$wt
View(perm_results)
load_all()
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 3
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
perm_results$original_wt
load_all()
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 3
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
perm_results$original_wt
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 30
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 50
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
out<- list()
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
wh_cluster<- which(tmp$clusters$cluster.count > stcs_thr)
#wh_cluster_sel<- tmp$clusters$clusters %in% wh_cluster
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
# combining function of stcs and stcs_maxT_all
wt_thr <- quantile(perm_results$wt, 1-alpha_global, na.rm = TRUE)
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster_wt) x %in% wh_cluster_wt, wh_cluster_wt)
wt_thr
perm_results$original_wt
perm_results$wt
View(perm_results)
load_all()
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 3
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
View(perm_results)
perm_results$original_wt
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 10
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
View(perm_results)
# perm_dist performs obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 40
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
View(perm_results)
perm_results$original_wt
View(perm_results)
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
View(tmp)
load_all()
# perm_dist obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 12
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
View(perm_results)
load_all()
# perm_dist obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 30
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
out<- list()
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
wh_cluster<- which(tmp$clusters$cluster.count > stcs_thr)
#wh_cluster_sel<- tmp$clusters$clusters %in% wh_cluster
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
# combining function of stcs and stcs_maxT_all
wt_thr <- quantile(perm_results$wt, 1-alpha_global, na.rm = TRUE)
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster_wt) x %in% wh_cluster_wt, wh_cluster_wt)
stcs_thr
tmp$stcs
perm_results$stcs
perm_results$wt
wt_thr
perm_results$original_wt
tmp$clusters$cluster.count
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
dis_maxT_all <- ecdf(perm_results$stcs_maxT_all)
View(perm_results)
load_all()
# perm_dist obtains the permutation distribution for maxT, STCS and others specified in the respective functions
# perm_results<- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
#*******************************************************************************
# test new perm_dist
#*******************************************************************************
nperm = 30
load_all()
# perm_results <- perm_dist(data=data_detrend, fx=fx, nperm=nperm, alpha_local=alpha_local,
#                          alpha_global=alpha_global, null_distribution=null_distribution,
#                          seed=seed, block_size=block_size, verbose=verbose)
perm_results <- perm_dist(data=data, fx=fx, nperm=nperm, alpha_local=alpha_local,
alpha_global=alpha_global, null_distribution=null_distribution,
seed=seed, block_size=block_size, verbose=verbose)
out<- list()
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
stcs_thr<- quantile(perm_results$stcs, 1-alpha_global, na.rm = TRUE)
wh_cluster<- which(tmp$clusters$cluster.count > stcs_thr)
#wh_cluster_sel<- tmp$clusters$clusters %in% wh_cluster
out$stcs<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster) x %in% wh_cluster, wh_cluster)
# combining function of stcs and stcs_maxT_all
wt_thr <- quantile(perm_results$wt, 1-alpha_global, na.rm = TRUE)
wh_cluster_wt <- which(perm_results$original_wt > wt_thr)
out$Wt<- apply(tmp$clusters$clusters, 1:2, function(x, wh_cluster_wt) x %in% wh_cluster_wt, wh_cluster_wt)
View(out)
perm_results$original_wt
wt_thr
tmp$clusters$cluster.count
dis_maxT_all <- ecdf(perm_results$stcs_maxT_all)
dis_stcs<- ecdf(perm_results$stcs)
wt <- vector(length = nperm)
clust_perm <- perm_results$original_results
wt <- vector(length = length(clust_perm$cluster.count))
clust_perm <- tmp
wt <- vector(length = length(clust_perm$cluster.count))
for(j in 1:length(clust_perm$cluster.count)){
# retrieve p-values for each cluster
p_maxT_all <- 1 - dis_maxT_all(clust_perm$cluster.max[j])
p_stcs <- 1 - dis_stcs(clust_perm$cluster.count[j])
# combine in new test statistic
w <- 1 - min(log(p_maxT_all), log(p_stcs))
wt[j] <- w
}
wt
wt <- vector(length = length(clust_perm$cluster.count))
length(wt)
clust_perm <- tmp
wt <- vector(length = length(clust_perm$cluster.count))
View(clust_perm)
wt <- vector(length = length(clust_perm$clusters$cluster.count))
wt <- vector(length = length(clust_perm$clusters$cluster.count))
for(j in 1:length(clust_perm$clusters$cluster.count)){
# retrieve p-values for each cluster
p_maxT_all <- 1 - dis_maxT_all(clust_perm$cluster.max[j])
p_stcs <- 1 - dis_stcs(clust_perm$cluster.count[j])
# combine in new test statistic
w <- 1 - min(log(p_maxT_all), log(p_stcs))
wt[j] <- w
}
wt
tmp<- get_stcs(data=perm_results$original_results, alpha_local=alpha_local, null_distribution=null_distribution)
dis_maxT_all <- ecdf(perm_results$stcs_maxT_all)
dis_stcs<- ecdf(perm_results$stcs)
wt <- vector(length = length(clust_perm$clusters$cluster.count))
for(j in 1:length(clust_perm$clusters$cluster.count)){
# retrieve p-values for each cluster
p_maxT_all <- 1 - dis_maxT_all(clust_perm$clusters$cluster.max[j])
p_stcs <- 1 - dis_stcs(clust_perm$clusters$cluster.count[j])
# combine in new test statistic
w <- 1 - min(log(p_maxT_all), log(p_stcs))
wt[j] <- w
}
wt
#for(j in 1:length(clust_perm$clusters$cluster.count)){
# retrieve p-values for each cluster
j <- 4
p_maxT_all <- 1 - dis_maxT_all(clust_perm$clusters$cluster.max[j])
p_stcs <- 1 - dis_stcs(clust_perm$clusters$cluster.count[j])
log(0.0000000000001)
log(0.000000000000001)
log(0.000000001)
usethis::edit_r_profile('project')
install.packages('devtools')
install.packages("devtools")
install.packages('devtools')
citation()
citation('strucchange')
print(<citation>, bibtex=TRUE)
print(strucchange, bibtex=TRUE)
print(citation('strucchange'), bibtex=TRUE)
