theme_bw()
# filtered by maximum
results_df %>%
group_by(id) %>%
filter(results_length==max(results_length)) %>%
ggplot(aes(x = results_length, y = abs(maxT), color = (id-25))) +
geom_point() +
# xlim(c(0,1000)) +
scale_fill_distiller(palette='Spectral') +
geom_point(aes(x = results_length, y = abs(maxT)),
data = results_encircle %>% filter(results_length==max(results_length)) ,
color = "red",
size = 2)+
geom_point(aes(x = results_length, y = abs(maxT)),
data = results_encircle, #%>% filter(results_length==max(results_length)),
color = "red",
size = 2) +
theme_bw() +
geom_hline(yintercept = quantile(abs(data_lai_res$maxT), probs = .975)) +
geom_vline(xintercept = quantile(abs(data_lai_res$stcs), probs = .975)) +
geom_vline(xintercept = quantile(abs(data_lai_res$stcs), probs = .95), col = "green") +
geom_vline(xintercept = quantile(abs(data_lai_res$stcs), probs = .9), col = "blue") +
geom_hline(yintercept = quantile(abs(data_lai_res$maxT), probs = .95), col = "green") +
geom_hline(yintercept = quantile(abs(data_lai_res$maxT), probs = .9), col = "blue")
#************************************************************
# Check clustersizes of significant clusters with LAI data
#************************************************************
#perm_results <- readRDS("LAI_Wtadjust_nperm_3.rds")
res <- readRDS("testing/LAI_Wtadjust_nperm_100.rds")
View(res)
#************************************************************
# Check clustersizes of significant clusters with LAI data
#************************************************************
#perm_results <- readRDS("LAI_Wtadjust_nperm_3.rds")
res <- readRDS("testing/LAI_Wtadjust_nperm_100.rds")
View(res)
View(res)
#************************************************************
# Check clustersizes of significant clusters with LAI data
#************************************************************
#perm_results <- readRDS("LAI_Wtadjust_nperm_3.rds")
res <- readRDS("testing/LAI_Wtadjust_nperm_100.rds")
View(res)
library(tidyverse)
#************************************************************
# Check clustersizes of significant clusters with LAI data
#************************************************************
orig <- readRDS("testing/LAI_Wtadjust_nperm_2.rds")
# in former code the number and sizes of cluster of original data were not returned
# changed this and executed again with only 2 permutations and retrieved cluster sizes
res <- readRDS("testing/LAI_Wtadjust_nperm_100.rds")
clust_size <- orig$original_data$cluster.count
wt_vals <- res$original_wt
res_df <- data.frame(clust_size,wt_vals)
names(res_df) <- c("cluster_size","wt_values")
res_df %>%
ggplot(aes(x = cluster_size, y = wt_vals)) +
labs(title = "Suprathreshold Cluster of Mann Kendall's Trend Test (alpha = 0.05)") +
xlab('Cluster Size') +
ylab('Tippet combining function value') +
geom_point(color = "steelblue3", size = 2, alpha = 0.6) +
theme_bw() +
geom_hline(yintercept = quantile(res$wt, probs = .95),col = "red") +
geom_text(aes(5000,quantile(res$wt, probs = .95),label = "alpha = 0.05", size= 0.5)) +
geom_vline(xintercept = quantile(res$stcs, probs = .95),col = "red") +
geom_vline(xintercept = quantile(res$stcs, probs = .975), col = "coral1", linetype="dotted") +
geom_hline(yintercept = quantile(res$wt, probs = .975), col = "coral1", linetype="dotted")
res_df %>%
ggplot(aes(x = cluster_size, y = wt_vals)) +
labs(title = "Suprathreshold Cluster of Mann Kendall's Trend Test (alpha = 0.05)") +
xlab('Cluster Size') +
ylab('Tippet combining function value') +
geom_point(color = "steelblue3", size = 2, alpha = 0.6) +
theme_bw() +
geom_hline(yintercept = quantile(res$wt, probs = .95),col = "red") +
geom_text(aes(5000,quantile(res$wt, probs = .95),label = "alpha = 0.05", size= 0.5)) +
geom_vline(xintercept = quantile(res$stcs, probs = .95),col = "red") +
geom_vline(xintercept = quantile(res$stcs, probs = .975), col = "coral1", linetype="dotted") +
geom_hline(yintercept = quantile(res$wt, probs = .975), col = "coral1", linetype="dotted")
library(tidyverse)
res <- readRDS("testing/LAI_Wtadjust_nperm_1000.rds")
View(res)
res$maxT
res$stcs
res$stcs_maxT
res$wt
res$original_wt
res_df <- data.frame(res$original_data$cluster.count, res$original_wt)
names(res_df) <- c("cluster_size","wt_values")
View(res_df)
# values declared significant by tippet
tipp_95 <- res_df %>%
dplyr::filter(wt_vals >= quantile(res$wt, probs = .95))
clust_size <- res$original_data$cluster.count
wt_vals <- res$original_wt
res_df <- data.frame(clust_size,wt_vals)
names(res_df) <- c("cluster_size","wt_values")
# values declared significant by tippet
tipp_95 <- res_df %>%
dplyr::filter(wt_vals >= quantile(res$wt, probs = .95))
tipp_975 <- res_df %>%
dplyr::filter(wt_vals >= quantile(res$wt, probs = .975))
# values declared significant by stcs
stcs_95 <- res_df %>%
dplyr::filter(cluster_size >= quantile(res$stcs, probs = .95))
stcs_975 <- res_df %>%
dplyr::filter(cluster_size >= quantile(res$stcs, probs = .975))
# values declared significant by tippet but not by stcs
tip_small_95 <- res_df %>%
dplyr::filter(wt_vals >= quantile(res$wt, probs = .95) & cluster_size < quantile(res$stcs, probs = .95))
tip_small_975 <- res_df %>%
dplyr::filter(wt_vals >= quantile(res$wt, probs = .975) & cluster_size < quantile(res$stcs, probs = .975))
res_df %>%
ggplot(aes(x = cluster_size, y = wt_vals)) +
labs(title = "Suprathreshold Cluster of Mann Kendall's Trend Test (alpha = 0.05)") +
xlab('Suprathreshold Cluster Size') +
ylab('Tippet combining function value') +
geom_point(color = "steelblue3", size = 2, alpha = 0.6) +
theme_bw() +
geom_hline(yintercept = quantile(res$wt, probs = .95),col = "red") +
geom_hline(yintercept = quantile(res$wt, probs = .975), col = "goldenrod1") +
geom_vline(aes(xintercept = quantile(res$stcs, probs = .95), colour = "alpha = 0.05")) +
geom_vline(aes(xintercept = quantile(res$stcs, probs = .975), colour = "alpha = 0.025")) +
scale_colour_manual("MaxDistribution Threshold",
values = c("alpha = 0.05"="red", "alpha = 0.025"="goldenrod1")
) +
geom_rect(mapping = aes(xmin=22500, xmax=42000, ymin=0.8, ymax=2), fill = NA, color = "black", show.legend = FALSE) +
annotate("text", x=32000, y=1.79, label= "For maxDistribution alpha = 0.05:", size = 3, fontface = "bold") +
annotate("text", x=32000, y=1.59, label= paste0("Significant Cluster STCS: ", nrow(stcs_95) ), size = 3) +
annotate("text", x=32000, y=1.44, label= paste0("Significant Cluster Tippet: ", nrow(tipp_95)), size = 3) +
annotate("text", x=32000, y=1.29, label= paste0("Significant Cluster Tippet but not STCS: ", nrow(tip_small_95)), size = 3) +
annotate("text", x=32000, y=1.09, label= paste0("Total number of Cluster: ", nrow(res_df)), size = 3)
res_df %>%
ggplot(aes(x = cluster_size, y = wt_vals)) +
labs(title = "Suprathreshold Cluster of Mann Kendall's Trend Test (alpha = 0.05)") +
xlab('Suprathreshold Cluster Size') +
ylab('Tippet combining function value') +
geom_point(color = "steelblue3", size = 2, alpha = 0.6) +
theme_bw() +
geom_hline(yintercept = quantile(res$wt, probs = .95),col = "red") +
geom_hline(yintercept = quantile(res$wt, probs = .975), col = "goldenrod1") +
geom_vline(aes(xintercept = quantile(res$stcs, probs = .95), colour = "alpha = 0.05")) +
geom_vline(aes(xintercept = quantile(res$stcs, probs = .975), colour = "alpha = 0.025")) +
scale_colour_manual("MaxDistribution Threshold",
values = c("alpha = 0.05"="red", "alpha = 0.025"="goldenrod1")
) #+
load("/home/jose/LAI/data/CHEN_RANGA/AVHRR/yearly_mean/lai_data.RData")
load("hpc_vroni/home/jose/LAI/data/CHEN_RANGA/AVHRR/yearly_mean/lai_data.RData")
# load data to see in which one spatial information is stored
load("/home/jose/LAI/data/CHEN_RANGA/AVHRR/yearly_mean/lai_data_1988_2006.RData")
View(data)
View(data[[3]][[1]])
load("/home/jose/LAI/data/CHEN_RANGA/AVHRR/yearly_mean/yearly_mean.RData")
load("/home/jose/LAI/data/CHEN_RANGA/AVHRR/yearly_mean/lai_data.RData")
View(data)
View(data)
# load data to see in which one spatial information is stored
#load("/home/jose/LAI/data/CHEN_RANGA/AVHRR/yearly_mean/lai_data_1988_2006.RData")
#load("/home/jose/LAI/data/CHEN_RANGA/AVHRR/yearly_mean/lai_data.RData")
library(starts)
# load data to see in which one spatial information is stored
#load("/home/jose/LAI/data/CHEN_RANGA/AVHRR/yearly_mean/lai_data_1988_2006.RData")
#load("/home/jose/LAI/data/CHEN_RANGA/AVHRR/yearly_mean/lai_data.RData")
library(stars)
read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc")
rasÂ¿read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc")
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc")
View(ras)
plot(ras)
ras
ras[[1]]
ras$LAI.7200.3600.1984.nc
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE)
ras
plot(ras)
rasterio = list(bands = c(2))
rasterio = list(bands = c(2))
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", RasterIO = rasterio))
View(x)
x
plot(x)
nc <- nc_open("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc")
library(ncdf4)
nc <- nc_open("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc")
View(nc)
View(nc)
library(dplyr)
#nc <- nc_open("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc")
nc <- read_ncdf("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", curvilinear = c("lon", "lat"))
install.packages("ncmeta")
#nc <- nc_open("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc")
nc <- read_ncdf("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", curvilinear = c("lon", "lat"))
#nc <- nc_open("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc")
nc <- read_ncdf("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", var = "LAI")#,
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE)
ras
sub <- ras[,,15]
View(sub)
sub
sub <- ras[,,,15]
sub
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE,  var = "LAI")
ras
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE,  var = "LAI.7200.3600.1984.nc")
ras
#sub <- ras[,,,15]
sub <- dplyr::slice(ras, index=c(14), along="time")
sub
View(sub)
sub <- ras[,,,15]
sub
#sub <- ras[,,,15]
sub <- dplyr::slice(ras, index=c(14), along="time")
sub
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE)
ras
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE) %>%
merge()
names(ras)
ras
sub <- ras[,,,15]
sub
sub <- dplyr::slice(ras, index=c(14), along="time")
sub
sub <- slice(time, 6)
sub <- slice(ras, time, 6)
sub
ras %>% slice(time, 6) -> sub
sub
rasterio = list(time = c(2))
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", RasterIO = rasterio))
x
rasterio = list(nXOff = -180, nYOff = 90, nXSize = 7200, nYSize = 3600, time = c(3))
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", RasterIO = rasterio))
rasterio = list(nXOff = -180, nYOff = 90, nXSize = 7200, nYSize = 3600, time = c(1,3))
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", RasterIO = rasterio))
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE)
crs(ras)
new = st_crs(4326)
y = st_transform(ras, new)
st_crs(ras)
st_crs(ras) <- 4326
st_crs(ras)
ras
sub <- dplyr::slice(ras, index=c(14), along="time")
sub
ras %>% slice(time, 6) -> sub
sub
sub <- slice(ras, time, 6)
sub
rasterio = list(nXOff = -180, nYOff = 90, nXSize = 7200, nYSize = 3600, time = c(1,3))
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", RasterIO = rasterio))
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE, along = "time")
ras
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE, along = 4)
ras
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", proxy = TRUE, along = 4)
st_crs(ras) <- 4326
ras
ras$LAI.7200.3600.1984.nc
ras <- read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", along = 4)
st_crs(ras) <- 4326
ras
ras %>% slice(time, 6) -> sub
sub
ras <- read_stars("/home/jose/LAI/data/gimms_lai_3gv1/LAI.AVHRR.4320.2160.2009.nc", proxy = TRUE)
ras
rasterio = list(nXOff = -180, nYOff = 90, nXSize = 200, nYSize = 600, time = c(1,3))
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", RasterIO = rasterio))
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc")#, RasterIO = rasterio))
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc"))#, RasterIO = rasterio))
sdf
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc"))#, RasterIO = rasterio))
rasterio = list(nXOff = -180, nYOff = 90, nXSize = 200, nYSize = 600, time = 3)
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc"), RasterIO = rasterio))
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", RasterIO = rasterio))
rasterio = list(nXOff = -180, nYOff = 90, nXSize = 200, nYSize = 600, time = 3)
(x = read_stars("/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc", RasterIO = rasterio))
ras <- read_stars("/home/jose/LAI/data/gimms_lai_3gv1/LAI.AVHRR.4320.2160.2009.nc", proxy = TRUE)
ras
ras <- read_stars("/home/jose/LAI/data/gimms_lai_3gv1/LAI.AVHRR.4320.2160.2009.nc", proxy = TRUE, var="LAI.AVHRR.4320.2160.2009.nc")
ras
ras <- read_stars("/home/jose/LAI/data/gimms_lai_3gv1/LAI.AVHRR.4320.2160.2009.nc", var="LAI.AVHRR.4320.2160.2009.nc")
ras
file <- "/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.1984.nc"
ras <- read_ncdf(file, ncsub = cbind(start = c(1, 1, 1, 1), count = c(1, 1, 1, 366)))
f <- "/home/jose/LAI/data/gimms_lai_3gv1/LAI.AVHRR.4320.2160.2009.nc"
# read_stars
ras <- read_stars(f, proxy = TRUE)
st_crs(ras) <- 4326
ras
sub <- ras["LAI.AVHRR.4320.2160.2009.nc", , , 2:4]
sub
# read_ncdf
ras <- read_ncdf(f)
nc_slice = slice(ras, index = 17, along = "time")
nc_slice
ras
# read_stars
(read_stars(f))
rasterio = list(nXOff = 1, nYOff = 1, nXSize = 4320, nYSize = 2160, time = 3)
(x = read_stars(f, RasterIO = rasterio))
# read_stars
ras <- read_stars(f)
crs(ras) <- 4326
st_crs(ras) <- 4326
ras
sub <- slice(ras, index = 17, along = "time")
sub
sub <- dplyr::slice(ras, index = 17, along = "time")
sub
read_stars(f) %>%
slice(index = 1, along = "time") %>%
plot()
# read_stars
ras <- read_stars(file)
st_crs(ras) <- 4326
ras
sub <- dplyr::slice(ras, index = 17, along = "time")
read_stars(file) %>%
slice(index = 1, along = "time") %>%
plot()
file <- "/home/jose/LAI/data/LAI_FAPAR_v2019/LAI.7200.3600.2007.nc"
read_stars(file) %>%
slice(index = 1, along = "time") %>%
plot()
read_stars(f) %>%
slice(index = 1, along = "time") %>%
plot()
read_stars(file) %>%
st_crs() <- 4326 %>%
slice(index = 1, along = "time") %>%
plot()
read_stars(file) %>%
slice(index = 1, along = "time") %>%
plot()
read_stars(file) %>%
slice(index = 3, along = "time") %>%
plot()
# read_stars
ras <- read_stars(file)
st_crs(ras) <- 4326
ras %>%
slice(index = 3, along = "time") %>%
plot()
library(ggplot2)
View(ras)
# read_stars
ras <- read_stars(f)
View(ras)
# read_stars
ras <- read_stars(f)
ras2 <- read_stars(file)
View(ras)
View(ras2)
# read_stars
#ras <- read_stars(f)
ras <- read_stars(file)
st_crs(ras) <- 4326
ras
by_t = as.POSIXct(c("2007-01-01", "2007-12-31"))
year<- stars::aggregate(ras, by = by_t, FUN = mean)
year<- aggregate(ras, by = by_t, FUN = mean)
# read_stars
#ras <- read_stars(f)
ras <- read_stars(file, proxy = FALSE)
st_crs(ras) <- 4326
st_get_dimension_values(ras, "time")
dates <- c(st_get_dimension_values(ras, "time")[1],st_get_dimension_values(ras, "time")[-1])
dates
dates <- c(st_get_dimension_values(ras, "time")[[1]],st_get_dimension_values(ras, "time")[[-1]])
dates <- st_get_dimension_values(ras, "time")[[1]]
dates <- c(dates[[1]], dates[[length(dates)]])
year <- aggregate(ras, by = dates, FUN = mean)
memory.limit()
ras %>%
slice(index = 3, along = "time") %>%
plot()
library(ncdf4)
library(raster)
library(rasterVis)
lai_ras <- brick(file)
lai_ras
mean <- calc(lai_ras, fun = mean, na.rm = T)
mean
names(mean) <- "LAI"
mean
plot(mean)
mean_array <- getValues(mean)
mean_array
dim(mean_array)
rnc <- writeRaster(mean, filename="/home/veronika/CPD/data/LAI_mean_2007.nc", format="CDF", overwrite=TRUE)
star_ras <- read_stars("/home/veronika/CPD/data/LAI_mean_2007.nc")
star_ras
plot(star_ras)
star_ras %>% pull(1) -> stars_array
View(star_ras)
dim(star_ras)
beginCluster()
library(clustermq)
# 1) get file for every year in directory
dir <- "/home/jose/LAI/data/LAI_FAPAR_v2019/"
files <- list.files(pattern = "\\.dbf$")
files <- dir %>% list.files(pattern = "\\.dbf$")
files <-list.files(dir, pattern = "\\.dbf$")
# 1) get file for every year in directory
dir <- "/home/jose/LAI/data/LAI_FAPAR_v2019/"
files <-list.files(dir, pattern = "\\.dbf$")
files <-list.files(dir, pattern = "\\.nc$")
files
# Get files for every year in directory
dir <- "/home/jose/LAI/data/LAI_FAPAR_v2019/"
files <-list.files(dir, pattern = "\\.nc$", full.names = T)
file <- files[1]
s <- str_split(file,"/")
s <- stringr::str_split(file,"/")
View(s)
f <- paste0("/home/veronika/CPD/data/NOAA_LAI/yearly_median/", s[[length(s)]])
f <- paste0("/home/veronika/CPD/data/NOAA_LAI/yearly_median/", s[[1]][length(s[[1]])])
f
f <- paste0("/home/veronika/CPD/data/NOAA_LAI/yearly_median/median.", s[[1]][length(s[[1]])])
f
yearly_median <- function(file){
library(ncdf4)
library(raster)
lai_ras <- raster::brick(file)
mean <- raster::calc(lai_ras, fun = mean, na.rm = T)
names(mean) <- "LAI"
s <- stringr::str_split(file,"/")
f <- paste0("/home/veronika/CPD/data/NOAA_LAI/yearly_median/", s[[1]][length(s[[1]])])
writeRaster(mean, filename=f, format="CDF", overwrite=TRUE)
}
star_ras <- read_stars("/home/veronika/CPD/data/LAI_mean_2007.nc")
star_ras
lai_ras
lai_ras[Date]
lai_ras["Date"]
lai_ras$Date
lai_ras$time
names(lai_ras)
names(lai_ras)[[1]]
getZ(lai_ras)
getZ(lai_ras)[[1]]
mean <- setZ(mean, getZ(lai_ras)[[1]], "year")
mean
mean <- setZ(mean, "median", "aggregation")
mean
mean <- setZ(mean, getZ(lai_ras)[[1]], "year")
mean
# aggregate 2020 values into one netcdf for the whole year
#**********************
dir <- "/home/veronika/CPD/data/LAI_2020"
files <-list.files(dir, pattern = "\\.nc$", full.names = T)
# aggregate 2020 values into one netcdf for the whole year
#**********************
dir <- "/home/veronika/CPD/data/LAI_2020"
files <-list.files(dir, pattern = "\\.nc$", full.names = T)
# aggregate 2020 values into one netcdf for the whole year
#**********************
library(tidyverse)
dir <- "/home/veronika/CPD/data/LAI_2020"
files <-list.files(dir, pattern = "\\.nc$", full.names = T)
load_raster <- function(path){
ras <- raster::raster(path)
return(ras)
}
ras <- purrr::map(files, load_raster)
ras <- raster::raster(files[1])
files[1]
ras <- raster::raster(files[1], crs = 4326)
View(ras)
f <- raster::raster(files[1], crs = 4326)
raster_file <- raster::raster(files[1], crs = 4326)
library(raster)
raster_file <- raster::raster(files[1], crs = 4326)
install.packages("rgdal")
install.packages("rgdal")
raster_file <- raster::raster(files[1], varname = "LAI")
# aggregate 2020 values into one netcdf for the whole year
#**********************
library(tidyverse)
library(raster)
dir <- "/home/veronika/CPD/data/LAI_2020"
files <-list.files(dir, pattern = "\\.nc$", full.names = T)
raster_file <- raster::raster(files[1], varname = "LAI")
library(ncdf4)
install.packages('rgdal')
install.packages('rgdal')
install.packages("rgdal")
install.packages("rgdal")
dir <- "/home/veronika/CPD/data/LAI_2020"
files <-list.files(dir, pattern = "\\.nc$", full.names = T)
raster_file <- raster::raster(files[1], varname = "LAI")
raster_file <- raster::raster(files[1], varname = "LAI", crs = 4326)
library(stars)
install.packages('sf')
install.packages("sf")
install.packages('rgeos')
install.packages('rgdal')
library(stars)
files[1]
lai_raster <- read_stars(files[1])
warnings()
raster_file <- raster::raster(files[1], varname = "LAI")
install.packages('raster')
# aggregate 2020 values into one netcdf for the whole year
#**********************
library(tidyverse)
install.packages('raster')
install.packages('raster')
install.packages("raster")
library(raster)
